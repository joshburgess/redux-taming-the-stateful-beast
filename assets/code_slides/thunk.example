// REDUX-THUNK

// a drop-down list onChange handler
export const hubHandleSelectStoreLevel = (newSelOpt) => {
  return (dispatch) => {
    // immediate & synchronous action dispatch to update dropdown-list
    dispatch({
      type: ActionTypes.HUB_SELECT_STORE_LEVEL,
      payload: newSelOpt
    })
    const params = Object.freeze({
      StoreName: newSelOpt.label,
      OrderID: newSelOpt.value
    })
    // dispatching a thunk which calls a web API endpoint
    // using a Promise-based http client (like fetch or axios)
    // which eventually resolves as a synchronous update
    dispatch(hubFetchStoreLevelDetails(params))
  }
}

// another similar example
function fetchPosts(reddit) {
  return dispatch => {
    dispatch(requestPosts(reddit))
    return fetch(`https://www.reddit.com/r/${reddit}.json`)
      .then(response => response.json())
      .then(json => dispatch(receivePosts(reddit, json)))
  }
}

// and the actionCreator which triggers the synchronous reducer update
function receivePosts(reddit, json) {
  return {
    type: RECEIVE_POSTS,
    reddit,
    posts: json.data.children.map(child => child.data),
    receivedAt: Date.now()
  }
}
